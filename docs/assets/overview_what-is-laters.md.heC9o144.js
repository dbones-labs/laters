import{_ as e,c as o,o as a,a4 as t}from"./chunks/framework.DclLByTZ.js";const g=JSON.parse('{"title":"Laters","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"overview/what-is-laters.md","filePath":"overview/what-is-laters.md","lastUpdated":null}'),s={name:"overview/what-is-laters.md"},i=t('<h1 id="laters" tabindex="-1">Laters <a class="header-anchor" href="#laters" aria-label="Permalink to &quot;Laters&quot;">​</a></h1><p>Its a .NET solution for scheduling jobs/tasks and processing of them.</p><p>There are a number of existing solutions, which is fine, this solution has some great features, which may just work for you.</p><h1 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h1><p>Laters, offers just enough features to support some advanced sceduling and processing of jobs</p><ul><li><code>Fire and forget</code> - the ability to enqueue a job to be process as soon as possible in a background thread.</li><li><code>Delayed</code> - enqueue jobs to be processed at a later date.</li><li><code>Reocurring</code> - process jobs on a Cron a number of times, these can be setup on the fly</li><li><code>Global Reocurring</code> - application level Cron jobs</li></ul><p>These are all supported with some really cool lower level features</p><ul><li><code>Transactions</code> - all work is within a transation</li><li><code>Middleware</code> - apply logic againt the processing of jobs</li><li><code>Storage</code> - support to supply your own storage (Postgres out of the box)</li><li><code>Minimal Api</code> - a simple way to develop with Laters</li><li><code>IoC</code> - support for inversion of conrtrol from the ground up</li><li><code>Load balancing</code> - using your existing network to balanace the work</li></ul><h1 id="when-should-i-use-it" tabindex="-1">When should I use it <a class="header-anchor" href="#when-should-i-use-it" aria-label="Permalink to &quot;When should I use it&quot;">​</a></h1><p>The solution is designed to support background tasks</p><ul><li>Sending out notifications</li><li>Clean up tasks</li><li>Report generation</li><li>etc</li></ul><p>bascially things that happen in the background and you do not want a person waiting for its completion.</p>',12),r=[i];function l(n,d,c,u,h,p){return a(),o("div",null,r)}const b=e(s,[["render",l]]);export{g as __pageData,b as default};
